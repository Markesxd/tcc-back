{"version":3,"file":"common.js","mappings":"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","sources":["./src/Pipes/FormatDate.pipe.ts","./src/components/confirmation-modal/confirmation-modal.component.ts","./src/components/confirmation-modal/confirmation-modal.component.html","./src/model/User.model.ts","./src/services/cat.service.ts","./src/services/plan.service.ts","./node_modules/ngx-cookie-service/fesm2022/ngx-cookie-service.mjs"],"sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({name: 'formatDate', standalone: true})\nexport class FormatDate implements PipeTransform{\n    transform(date?: Date | string): string {\n        if(typeof date === 'string') {\n            date = new Date(date);\n        }\n        return date ? `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}` : '';\n    }\n}","import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirmation-modal',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.css']\n})\nexport class ConfirmationModalComponent {\n  @Input()\n  text?: string;\n\n  constructor(\n    private modalService: NgbActiveModal\n  ) {}\n\n  dismiss(): void {\n    this.modalService.dismiss();\n  }\n\n  close(): void {\n    this.modalService.close();\n  }\n}\n","<div class=\"p-2\">\n    <h3 class=\"form-title mb-3 text-center\">{{text}}</h3>\n    <div class=\"d-flex justify-content-evenly\">\n        <button class=\"btn card\" (click)=\"dismiss()\">Cancelar</button>\n        <button class=\"btn btn-danger\" (click)=\"close()\" >Confirmar</button>\n    </div>\n</div>","import { FormGroup } from \"@angular/forms\";\n\nexport interface IUser {\n    id?: string,\n    username?: string,\n    email?: string,\n    password?: string\n}\n\nexport class User implements IUser {\n    id?: string;\n    username?: string;\n    email?: string;\n    password?: string;\n\n    public createFromForm(formGroup: FormGroup) {\n        this.username = formGroup.get('name')?.value;\n        this.email = formGroup.get('email')?.value;\n        this.password = formGroup.get('password')?.value;\n    }\n}","import { Injectable } from \"@angular/core\";\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { ICat } from \"src/model/Cat.model\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CatService {\n    private base = environment.apiUrl + '/gato';\n    \n    constructor(\n        private http: HttpClient,\n    ) {}\n\n    get(params?: any): Observable<HttpResponse<Object>> {\n        return this.http.get(this.base, {\n            observe: 'response',\n            params\n        });\n    }\n\n    post(body: any, params?: any): Observable<HttpResponse<Object>> {\n        return this.http.post(this.base, body, {\n            observe: 'response',\n            params,\n        });\n    }\n\n    put(cat: ICat): Observable<Object> {\n        return this.http.put(`${this.base}/${cat.id}`, cat);\n    }\n\n    delete(cat: ICat): Observable<Object> {\n        return this.http.delete(`${this.base}/${cat.id}`);\n    }\n}","import { HttpClient, HttpHeaders, HttpResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { IMeal, IPlan } from \"src/model/Plan.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlanService {\n    private baseUrl = environment.apiUrl + '/plano-alimentar';\n    \n    constructor(\n        private http: HttpClient,\n    ) {}\n\n    post(plan: IPlan): Observable<HttpResponse<Object>> {\n        return this.http.post(this.baseUrl, plan, {\n            observe: 'response'\n        });\n    }\n\n    fetch(): Observable<Object> {\n        return this.http.get(this.baseUrl);\n    }\n\n    put(plan: IPlan): Observable<Object> {\n        return this.http.put(`${this.baseUrl}/${plan.id}`, plan);\n    }\n\n    delete(plan: IPlan): Observable<Object> {\n        return this.http.delete(`${this.baseUrl}/${plan.id}`);\n    }\n\n    serve(meal: IMeal): Observable<Object> {\n        return this.http.put(`${this.baseUrl}/servir`, meal);\n    }\n}","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject } from '@angular/core';\nimport { isPlatformBrowser, DOCUMENT } from '@angular/common';\n\n// This service is based on the `ng2-cookies` package which sadly is not a service and does\n// not use `DOCUMENT` injection and therefore doesn't work well with AoT production builds.\n// Package: https://github.com/BCJTI/ng2-cookies\nclass CookieService {\n    constructor(document, \n    // Get the `PLATFORM_ID` so we can check if we're in a browser.\n    platformId) {\n        this.document = document;\n        this.platformId = platformId;\n        this.documentIsAccessible = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * Get cookie Regular Expression\n     *\n     * @param name Cookie name\n     * @returns property RegExp\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    static getCookieRegExp(name) {\n        const escapedName = name.replace(/([\\[\\]{}()|=;+?,.*^$])/gi, '\\\\$1');\n        return new RegExp('(?:^' + escapedName + '|;\\\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');\n    }\n    /**\n     * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n     *\n     * @param encodedURIComponent A value representing an encoded URI component.\n     *\n     * @returns The unencoded version of an encoded component of a Uniform Resource Identifier (URI).\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    static safeDecodeURIComponent(encodedURIComponent) {\n        try {\n            return decodeURIComponent(encodedURIComponent);\n        }\n        catch {\n            // probably it is not uri encoded. return as is\n            return encodedURIComponent;\n        }\n    }\n    /**\n     * Return `true` if {@link Document} is accessible, otherwise return `false`\n     *\n     * @param name Cookie name\n     * @returns boolean - whether cookie with specified name exists\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    check(name) {\n        if (!this.documentIsAccessible) {\n            return false;\n        }\n        name = encodeURIComponent(name);\n        const regExp = CookieService.getCookieRegExp(name);\n        return regExp.test(this.document.cookie);\n    }\n    /**\n     * Get cookies by name\n     *\n     * @param name Cookie name\n     * @returns property value\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    get(name) {\n        if (this.documentIsAccessible && this.check(name)) {\n            name = encodeURIComponent(name);\n            const regExp = CookieService.getCookieRegExp(name);\n            const result = regExp.exec(this.document.cookie);\n            return result[1] ? CookieService.safeDecodeURIComponent(result[1]) : '';\n        }\n        else {\n            return '';\n        }\n    }\n    /**\n     * Get all cookies in JSON format\n     *\n     * @returns all the cookies in json\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    getAll() {\n        if (!this.documentIsAccessible) {\n            return {};\n        }\n        const cookies = {};\n        const document = this.document;\n        if (document.cookie && document.cookie !== '') {\n            document.cookie.split(';').forEach((currentCookie) => {\n                const [cookieName, cookieValue] = currentCookie.split('=');\n                cookies[CookieService.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = CookieService.safeDecodeURIComponent(cookieValue);\n            });\n        }\n        return cookies;\n    }\n    set(name, value, expiresOrOptions, path, domain, secure, sameSite) {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        if (typeof expiresOrOptions === 'number' || expiresOrOptions instanceof Date || path || domain || secure || sameSite) {\n            const optionsBody = {\n                expires: expiresOrOptions,\n                path,\n                domain,\n                secure,\n                sameSite: sameSite ? sameSite : 'Lax',\n            };\n            this.set(name, value, optionsBody);\n            return;\n        }\n        let cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';\n        const options = expiresOrOptions ? expiresOrOptions : {};\n        if (options.expires) {\n            if (typeof options.expires === 'number') {\n                const dateExpires = new Date(new Date().getTime() + options.expires * 1000 * 60 * 60 * 24);\n                cookieString += 'expires=' + dateExpires.toUTCString() + ';';\n            }\n            else {\n                cookieString += 'expires=' + options.expires.toUTCString() + ';';\n            }\n        }\n        if (options.path) {\n            cookieString += 'path=' + options.path + ';';\n        }\n        if (options.domain) {\n            cookieString += 'domain=' + options.domain + ';';\n        }\n        if (options.secure === false && options.sameSite === 'None') {\n            options.secure = true;\n            console.warn(`[ngx-cookie-service] Cookie ${name} was forced with secure flag because sameSite=None.` +\n                `More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130`);\n        }\n        if (options.secure) {\n            cookieString += 'secure;';\n        }\n        if (!options.sameSite) {\n            options.sameSite = 'Lax';\n        }\n        cookieString += 'sameSite=' + options.sameSite + ';';\n        this.document.cookie = cookieString;\n    }\n    /**\n     * Delete cookie by name\n     *\n     * @param name   Cookie name\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     * @param secure Cookie secure flag\n     * @param sameSite Cookie sameSite flag - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    delete(name, path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const expiresDate = new Date('Thu, 01 Jan 1970 00:00:01 GMT');\n        this.set(name, '', { expires: expiresDate, path, domain, secure, sameSite });\n    }\n    /**\n     * Delete all cookies\n     *\n     * @param path   Cookie path\n     * @param domain Cookie domain\n     * @param secure Is the Cookie secure\n     * @param sameSite Is the cookie same site\n     *\n     * @author: Stepan Suvorov\n     * @since: 1.0.0\n     */\n    deleteAll(path, domain, secure, sameSite = 'Lax') {\n        if (!this.documentIsAccessible) {\n            return;\n        }\n        const cookies = this.getAll();\n        for (const cookieName in cookies) {\n            if (cookies.hasOwnProperty(cookieName)) {\n                this.delete(cookieName, path, domain, secure, sameSite);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: CookieService, deps: [{ token: DOCUMENT }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: CookieService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: CookieService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/*\n * Public API Surface of ngx-cookie-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CookieService };\n"],"names":["FormatDate","transform","date","Date","getDate","getMonth","getFullYear","_","_2","pure","standalone","CommonModule","ConfirmationModalComponent","constructor","modalService","dismiss","close","i0","ɵɵdirectiveInject","i1","NgbActiveModal","selectors","inputs","text","features","ɵɵStandaloneFeature","decls","vars","consts","template","ConfirmationModalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ConfirmationModalComponent_Template_button_click_4_listener","ConfirmationModalComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵtextInterpolate","styles","User","createFromForm","formGroup","username","get","value","email","password","environment","CatService","http","base","apiUrl","params","observe","post","body","put","cat","id","delete","ɵɵinject","HttpClient","factory","ɵfac","providedIn","PlanService","baseUrl","plan","fetch","serve","meal","PLATFORM_ID","Injectable","Inject","isPlatformBrowser","DOCUMENT","CookieService","document","platformId","documentIsAccessible","getCookieRegExp","name","escapedName","replace","RegExp","safeDecodeURIComponent","encodedURIComponent","decodeURIComponent","check","encodeURIComponent","regExp","test","cookie","result","exec","getAll","cookies","split","forEach","currentCookie","cookieName","cookieValue","set","expiresOrOptions","path","domain","secure","sameSite","optionsBody","expires","cookieString","options","dateExpires","getTime","toUTCString","console","warn","expiresDate","deleteAll","hasOwnProperty","CookieService_Factory","t","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","type","args","Document","decorators","undefined"],"sourceRoot":"webpack:///","x_google_ignoreList":[6]}