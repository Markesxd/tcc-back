{"version":3,"file":"src_pages_cadastro_cadastro_component_ts.js","mappings":"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","sources":["./src/pages/cadastro/cadastro.component.ts","./src/pages/cadastro/cadastro.component.html","./src/validators/matchingPasswordValidator.directive.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { AbstractControl, FormBuilder, ReactiveFormsModule, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/services/user.service';\nimport { User } from 'src/model/User.model';\nimport { matchingPasswordValidator } from 'src/validators/matchingPasswordValidator.directive';\nimport { AuthService } from 'src/services/auth.service';\n\n@Component({\n  selector: 'cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css'],\n  imports: [CommonModule, ReactiveFormsModule],\n  standalone: true\n})\nexport class CadastroComponent {\n\n  editForm = this.fb.group({\n    name: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required]],\n    repeat: ['', [Validators.required]]\n  },\n  {\n    validators: [matchingPasswordValidator]\n  })\n\n  constructor (\n    protected fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  get nameControl(): AbstractControl | null {\n    return this.editForm.get('name');\n  }\n\n  get emailControl(): AbstractControl | null {\n    return this.editForm.get('email');\n  }\n\n  get passwordControl(): AbstractControl | null {\n    return this.editForm.get('password'); \n  }\n\n  get repeatControl(): AbstractControl | null {\n    return this.editForm.get('repeat'); \n  }\n\n  onSubmit() {\n    const user = new User();\n    user.createFromForm(this.editForm);\n    this.authService.singUp(user)\n    .subscribe(() => {\n      user.username = user.email;\n      this.authService.login(user).subscribe(() => {\n        this.router.navigate(['my-page']);\n      });\n    });\n  }\n\n  navigateBack(): void {\n    this.router.navigate(['/']);\n  }\n}\n","<div class=\"register-wrapper\">\n    <form class=\"register-body\" [formGroup]=\"editForm\" (ngSubmit)=\"onSubmit()\">\n        <h3 class=\"register-title\">Cadastro</h3>\n        <div>\n            <label for=\"name\">Nome</label>\n            <span *ngIf=\"nameControl?.dirty && !nameControl?.valid\" class=\"register-error\">Preecha o Nome</span>\n        </div>\n        <input type=\"text\" id=\"name\" name=\"name\" formControlName=\"name\">\n        <div>\n            <label for=\"email\">Email</label>\n            <span *ngIf=\"emailControl?.dirty && emailControl?.errors?.['required']\" class=\"register-error\">Preecha o email</span>\n            <span *ngIf=\"emailControl?.dirty && emailControl?.errors?.['email']\" class=\"register-error\">Email incorreto</span>\n        </div>\n        <input type=\"email\" id=\"Email\" name=\"email\" formControlName=\"email\">\n        <div>\n            <label for=\"password\">Senha</label>\n            <span *ngIf=\"passwordControl?.dirty && !passwordControl?.valid\" class=\"register-error\">Preecha a Senha</span>\n        </div>\n        <input type=\"password\" id=\"password\" name=\"password\" formControlName=\"password\">\n        <div>\n            <label for=\"repeat\">Repitir senha</label>\n            <span *ngIf=\"repeatControl?.dirty && editForm.errors?.['missMatchPassword']\" class=\"register-error\">Senhas devem coincidir</span>\n        </div>\n        <input type=\"password\" id=\"repeat\" name=\"repeat\" formControlName=\"repeat\">\n        <div class=\"d-flex justify-content-center\">\n            <button class=\"register-button secondary\" type=\"button\" (click)=\"navigateBack()\">Voltar</button>\n            <button class=\"register-button\" type=\"submit\" [disabled]=\"!editForm.valid\">Cadastrar</button>\n        </div>\n    </form>\n</div>","import { AbstractControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport const matchingPasswordValidator: ValidatorFn = (\n    control: AbstractControl,\n  ): ValidationErrors | null => {\n    const password = control.get('password')?.value;\n    const repeat = control.get('repeat')?.value;\n    \n    return password !== repeat\n      ? { missMatchPassword: true }\n      : null;\n  };"],"names":["CommonModule","ReactiveFormsModule","Validators","User","matchingPasswordValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CadastroComponent","constructor","fb","authService","router","editForm","group","name","required","email","password","repeat","validators","nameControl","get","emailControl","passwordControl","repeatControl","onSubmit","user","createFromForm","singUp","subscribe","username","login","navigate","navigateBack","_","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CadastroComponent_Template","rf","ctx","ɵɵlistener","CadastroComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","CadastroComponent_span_7_Template","ɵɵelement","CadastroComponent_span_12_Template","CadastroComponent_span_13_Template","CadastroComponent_span_18_Template","CadastroComponent_span_23_Template","CadastroComponent_Template_button_click_26_listener","ɵɵadvance","ɵɵproperty","dirty","valid","errors","i4","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles","control","value","missMatchPassword"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}